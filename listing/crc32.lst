     1                                  ;================================================
     2                                  
     3                                  section .text
     4                                  
     5                                  ;================================================
     6                                  
     7                                  global my_hash
     8                                  
     9                                  ;================================================
    10                                  
    11                                  ; rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11
    12                                  
    13                                  ; entry: rdi = data
    14                                  ;        rsi = size
    15                                  
    16                                  my_hash:
    17                                  
    18 00000000 B8FFFFFFFF                      mov eax, 0FFFFFFFFh             ; start value of crc
    19 00000005 4831C9                          xor rcx, rcx                    ; counter for data
    20                                  
    21                                      .loop:
    22 00000008 83FE00                          cmp esi, 0                      ; while size != 0
    23 0000000B 7412                            je .ret
    24 0000000D FFCE                            dec esi 
    25                                  
    26 0000000F 440FB6140F                      movzx r10d, byte [rdi + rcx]
    27 00000014 48FFC1                          inc rcx 
    28                                  
    29 00000017 F2410F38F0C2                    crc32 eax, r10b
    30 0000001D EBE9                            jmp .loop
    31                                  
    32                                      .ret:
    33 0000001F F7D0                            not eax 
    34 00000021 C3                              ret 
    35                                  
    36                                  
    37                                  ;================================================
    38                                  
    39                                  ; ZIX_API uint32_t
    40                                  ; zix_digest_add(uint32_t hash, const void* const buf, const size_t len)
    41                                  ; {
    42                                  ; 	const uint8_t* str = (const uint8_t*)buf;
    43                                  ; #ifdef __SSE4_2__
    44                                  ; 	// SSE 4.2 CRC32
    45                                  ; 	for (size_t i = 0; i < (len / sizeof(uint32_t)); ++i) {
    46                                  ; 		hash = _mm_crc32_u32(hash, *(const uint32_t*)str);
    47                                  ; 		str += sizeof(uint32_t);
    48                                  ; 	}
    49                                  ; 	if (len & sizeof(uint16_t)) {
    50                                  ; 		hash = _mm_crc32_u16(hash, *(const uint16_t*)str);
    51                                  ; 		str += sizeof(uint16_t);
    52                                  ; 	}
    53                                  ; 	if (len & sizeof(uint8_t)) {
    54                                  ; 		hash = _mm_crc32_u8(hash, *(const uint8_t*)str);
    55                                  ; 	}
    56                                  ; #else
    57                                  ; 	// Classic DJB hash
    58                                  ; 	for (size_t i = 0; i < len; ++i) {
    59                                  ; 		hash = (hash << 5) + hash + str[i];
    60                                  ; 	}
    61                                  ; #endif
    62                                  ; 	return hash;
    63                                  ; }
    64                                  
    65                                  ;================================================
    66                                  
    67                                  section .data 
    68                                  
    69                                  crc32_look_up: 
   102 00000000 0000000003836BF2F7-      dd 0x00000000, 0xF26B8303, 0xE13B70F7, 0x1350F3F4, 0xC79A971F, 0x35F1141C, 0x26A1E7E8, 0xD4CA64EB, 	0x8AD958CF, 0x78B2DBCC, 0x6BE22838, 0x9989AB3B, 0x4D43CFD0, 0xBF284CD3, 0xAC78BF27, 0x5E133C24, 	0x105EC76F, 0xE235446C, 0xF165B798, 0x030E349B, 0xD7C4507
   102 00000009 703BE1F4F350131F97-
   102 00000012 9AC71C14F135E8E7A1-
   102 0000001B 26EB64CAD4CF58D98A-
   102 00000024 CCDBB2783828E26B3B-
   102 0000002D AB8999D0CF434DD34C-
   102 00000036 28BF27BF78AC243C13-
   102 0000003F 5E6FC75E106C4435E2-
   102 00000048 98B765F19B340E0370-
   102 00000051 50C4D773D3AF258720-
   102 0000005A FF3684A394C4A09F87-
   102 00000063 9AA31CEC6857EFBC7B-
   102 0000006C 546CD789BF081D5DBC-
   102 00000075 8B76AF487826BC4BFB-
   102 0000007E 4D4EDE8EBD20DD0DD6-
   102 00000087 D229FE86C12A7DED33-
   102 00000090 C11927E7C29A4C1536-
   102 00000099 691C0635EA77F411D6-
   102 000000A2 64AA12550F58E6A65F-
   102 000000AB 4BE52534B90E41FE6D-
   102 000000B4 0DC2959FF931C58CFA-
   102 000000BD B2AE7EB149E330B2CA-
   102 000000C6 88C24639D8D145BAB3-
   102 000000CF 23AEDE79F7AD5D1205-
   102 000000D8 59AE42165A2D29E47E-
   102 000000E1 113ABA7D9251488961-
   102 000000EA 015B8AE26AA96186A0-
   102 000000F3 7D6205CB8F96F69B9C-
   102 000000FC 9575F06EBC1D7B41BF-
   102 00000105 9E10B34B6D40A048EE-
   102 0000010E 2B52A38AE186A0098A-
   102 00000117 7454FADA675779B195-
   102 00000120 7345A2CB70C6C93984-
   102 00000129 35992A87B6F2D86CD2-
   102 00000132 380C6F5153FE9BA203-
   102 0000013B ED9821681FD3DA2551-
   102 00000144 D0594EA324AA1EB027-
   102 0000014D 297542CC4DBF96CFCE-
   102 00000156 D4643B3D847738BEEF-
   102 0000015F 851C82FCDB1F019729-
   102 00000168 EBF2C73AE871ACC803-
   102 00000171 15661C00960DEEF465-
   102 0000017A 5DFDF7E6360F6293C6-
   102 00000183 616110AD9395E3FD80-
   102 0000018C 966096727D045CA67E-
   102 00000195 8737548A74674789F7-
   102 0000019E 0CB5ADCB1FEBAE4874-
   102 000001A7 195ABB240A59384FF8-
   102 000001B0 B25C852CB1DFEEDE45-
   102 000001B9 2CBECD46AFD53F0D54-
   102 000001C2 98710ED7F383FA24A3-
   102 000001CB 90F9A7C86212C302B6-
   102 000001D4 11406944E5B33957E6-
   102 000001DD 3052A5C20C41FBC18F-
   102 000001E6 2A09357C7A1A36FF11-
   102 000001EF E8DD9BDB3CDE18B0CE-
   102 000001F8 2AEBE0DD29688B2F78-
   102 00000201 3BF6827BB89D708F4B-
   102 0000020A CD638CC8A69167AC6C-
   102 00000213 45642F07B790DC57A4-
   102 0000021C 935F3C56B7632F08B4-
   102 00000225 E044FA401314E94390-
   102 0000022E 7F1BA8F4B5CFAB77DE-
   102 00000237 3D5F848E2E5C07E5DC-
   102 00000240 17FCA892147FC360E0-
   102 00000249 8C9373E30FF881086B-
   102 00000252 32550BE859A7FF1B09-
   102 0000025B B4FC986246D8A47118-
   102 00000264 DB271AEA2FD44AF92C-
   102 0000026D 57210BC733EBDFC4B0-
   102 00000276 802D3043D03E33C0BB-
   102 0000027F CCA6B54BA2A5362050-
   102 00000288 51C5704352461BB1B9-
   102 00000291 22D165BAA1BA974E52-
   102 0000029A EA844DD1817669ED92-
   102 000002A3 286A6EF9DA9E9DA9C9-
   102 000002AC 9D1EC23B767A08EF75-
   102 000002B5 F9631D810A330E8289-
   102 000002BE 58FCC97215B2CAF17E-
   102 000002C7 403E022E533D8145A1-
   102 000002D0 D6E58F75D566E48721-
   102 000002D9 95B4942216DF66062A-
   102 000002E2 CC3805A9A7CAF15AF7-
   102 000002EB D9F2D99C2B19BD56FF-
   102 000002F4 1A3E3D0DEECD6D1EED-
   102 000002FD 4E06ECC4268DC3C7A5-
   102 00000306 E6313356B62230D5DD-
   102 0000030F D0DBB11704D8327CF6-
   102 00000318 2CC12CE52F4247170B-
   102 00000321 7E544908FD3FBBFC0E-
   102 0000032A 6FA8FF8D045A14E9CE-
   102 00000333 8E176AA57CE399F56F-
   102 0000033C E01A9E9DABE1D3D3A8-
   102 00000345 62B8215C91E8325F12-
   102 0000034E 83C0B4764914B7F522-
   102 00000357 E6430672F540851907-
   102 00000360 64B90A59673A61AB93-
   102 00000369 C931B8904A5A4A7B2E-
   102 00000372 909E78ADFB6C8C5EAB-
   102 0000037B 7F8FDDC08D1AA830E3-
   102 00000384 192B5B11EDD80B02EE-
   102 0000038D 5B60F0053FAA2406BC-
   102 00000396 C1D6F24F91C5F1CCFA-
   102 0000039F 37D5F0E969D673829B-
   102 000003A8 2280D2882103B97ACA-
   102 000003B1 6773AEC9E4185C3D17-
   102 000003BA 484F3E9423BD756F6E-
   102 000003C3 F376EC0501821F5512-
   102 000003CC 819C3EE06AF8F43469-
   102 000003D5 7B9FC69D88CFD59E0B-
   102 000003DE A427BA37B779B9B4DC-
   102 000003E7 8B4D478C984EC4E76A-
   102 000003F0 A5A02DBEA623464C52-
   102 000003F9 D0165F51537DAD     
   103                                  ;================================================ 
